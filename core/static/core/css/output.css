/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
:root, :host {
--font-sans: "DM Sans";
--font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
"Courier New", monospace;
--color-red-100: oklch(93.6% 0.032 17.717);
--color-green-100: oklch(96.2% 0.044 156.743);
--color-blue-100: oklch(93.2% 0.032 255.585);
--color-blue-200: oklch(88.2% 0.059 254.128);
--color-blue-500: oklch(62.3% 0.214 259.815);
--color-gray-50: oklch(98.5% 0.002 247.839);
--color-gray-100: oklch(96.7% 0.003 264.542);
--color-gray-200: oklch(92.8% 0.006 264.531);
--color-gray-300: oklch(87.2% 0.01 258.338);
--color-gray-500: oklch(55.1% 0.027 264.364);
--color-black: #000;
--color-white: #fff;
--spacing: 0.25rem;
--text-xs: 0.75rem;
--text-xs--line-height: calc(1 / 0.75);
--text-sm: 0.875rem;
--text-sm--line-height: calc(1.25 / 0.875);
--text-base: 1rem;
--text-base--line-height: calc(1.5 / 1);
--text-lg: 1.125rem;
--text-lg--line-height: calc(1.75 / 1.125);
--text-xl: 1.25rem;
--text-xl--line-height: calc(1.75 / 1.25);
--text-2xl: 1.5rem;
--text-2xl--line-height: calc(2 / 1.5);
--text-3xl: 1.875rem;
--text-3xl--line-height: calc(2.25 / 1.875);
--font-weight-medium: 500;
--font-weight-bold: 700;
--radius-sm: 0.25rem;
--radius-md: 0.375rem;
--radius-lg: 0.5rem;
--animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
--animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
--default-transition-duration: 150ms;
--default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
--default-font-family: var(--font-sans);
--default-mono-font-family: var(--font-mono);
--color-red: #f54255;
--color-red-light: #FDE1E4;
--color-red-light-50: #FBC9CE;
--color-green: #05AD94;
--color-green-light: #CDEFEA;
--color-yellow: #FFD971;
--color-yellow-light: #FFF7E3;
--color-gray: #666768;
--color-gray-light: #F0F0F0;
--color-white-light: rgb(255,255,255, 0.5);
}
}
@layer base {
*, ::after, ::before, ::backdrop, ::file-selector-button {
box-sizing: border-box;
margin: 0;
padding: 0;
border: 0 solid;
}
html, :host {
line-height: 1.5;
-webkit-text-size-adjust: 100%;
tab-size: 4;
font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
font-feature-settings: var(--default-font-feature-settings, normal);
font-variation-settings: var(--default-font-variation-settings, normal);
-webkit-tap-highlight-color: transparent;
}
hr {
height: 0;
color: inherit;
border-top-width: 1px;
}
abbr:where([title]) {
-webkit-text-decoration: underline dotted;
text-decoration: underline dotted;
}
h1, h2, h3, h4, h5, h6 {
font-size: inherit;
font-weight: inherit;
}
a {
color: inherit;
-webkit-text-decoration: inherit;
text-decoration: inherit;
}
b, strong {
font-weight: bolder;
}
code, kbd, samp, pre {
font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
font-feature-settings: var(--default-mono-font-feature-settings, normal);
font-variation-settings: var(--default-mono-font-variation-settings, normal);
font-size: 1em;
}
small {
font-size: 80%;
}
sub, sup {
font-size: 75%;
line-height: 0;
position: relative;
vertical-align: baseline;
}
sub {
bottom: -0.25em;
}
sup {
top: -0.5em;
}
table {
text-indent: 0;
border-color: inherit;
border-collapse: collapse;
}
:-moz-focusring {
outline: auto;
}
progress {
vertical-align: baseline;
}
summary {
display: list-item;
}
ol, ul, menu {
list-style: none;
}
img, svg, video, canvas, audio, iframe, embed, object {
display: block;
vertical-align: middle;
}
img, video {
max-width: 100%;
height: auto;
}
button, input, select, optgroup, textarea, ::file-selector-button {
font: inherit;
font-feature-settings: inherit;
font-variation-settings: inherit;
letter-spacing: inherit;
color: inherit;
border-radius: 0;
background-color: transparent;
opacity: 1;
}
:where(select:is([multiple], [size])) optgroup {
font-weight: bolder;
}
:where(select:is([multiple], [size])) optgroup option {
padding-inline-start: 20px;
}
::file-selector-button {
margin-inline-end: 4px;
}
::placeholder {
opacity: 1;
}
@supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
::placeholder {
color: currentcolor;
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in oklab, currentcolor 50%, transparent);
}
}
}
textarea {
resize: vertical;
}
::-webkit-search-decoration {
-webkit-appearance: none;
}
::-webkit-date-and-time-value {
min-height: 1lh;
text-align: inherit;
}
::-webkit-datetime-edit {
display: inline-flex;
}
::-webkit-datetime-edit-fields-wrapper {
padding: 0;
}
::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
padding-block: 0;
}
:-moz-ui-invalid {
box-shadow: none;
}
button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
appearance: button;
}
::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
height: auto;
}
[hidden]:where(:not([hidden="until-found"])) {
display: none !important;
}
}
@layer utilities {
.modal {
pointer-events: none;
visibility: hidden;
position: fixed;
inset: calc(0.25rem * 0);
margin: calc(0.25rem * 0);
display: grid;
height: 100%;
max-height: none;
width: 100%;
max-width: none;
align-items: center;
justify-items: center;
background-color: transparent;
padding: calc(0.25rem * 0);
color: inherit;
overflow-x: hidden;
transition: translate 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
overflow-y: hidden;
overscroll-behavior: contain;
z-index: 999;
&::backdrop {
display: none;
}
&.modal-open, &[open], &:target {
pointer-events: auto;
visibility: visible;
opacity: 100%;
background-color: oklch(0% 0 0/ 0.4);
.modal-box {
translate: 0 0;
scale: 1;
opacity: 1;
}
}
@starting-style {
&.modal-open, &[open], &:target {
visibility: hidden;
opacity: 0%;
}
}
}
.tooltip {
position: relative;
display: inline-block;
--tt-bg: var(--color-neutral);
--tt-off: calc(100% + 0.5rem);
--tt-tail: calc(100% + 1px + 0.25rem);
> :where(.tooltip-content), &[data-tip]:before {
position: absolute;
max-width: 20rem;
border-radius: var(--radius-field);
padding-inline: calc(0.25rem * 2);
padding-block: calc(0.25rem * 1);
text-align: center;
white-space: normal;
color: var(--color-neutral-content);
opacity: 0%;
font-size: 0.875rem;
line-height: 1.25em;
transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
background-color: var(--tt-bg);
width: max-content;
pointer-events: none;
z-index: 1;
--tw-content: attr(data-tip);
content: var(--tw-content);
}
&:after {
position: absolute;
position: absolute;
opacity: 0%;
background-color: var(--tt-bg);
transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
content: "";
pointer-events: none;
width: 0.625rem;
height: 0.25rem;
display: block;
mask-repeat: no-repeat;
mask-position: -1px 0;
--mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
mask-image: var(--mask-tooltip);
}
&.tooltip-open, &[data-tip]:hover, &:hover, &:has(:focus-visible) {
> .tooltip-content, &[data-tip]:before, &:after {
opacity: 100%;
--tt-pos: 0rem;
transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
}
> .tooltip-content, &[data-tip]:before {
transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
inset: auto auto var(--tt-off) 50%;
}
&:after {
transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
inset: auto auto var(--tt-tail) 50%;
}
}
.tab {
position: relative;
display: inline-flex;
cursor: pointer;
appearance: none;
flex-wrap: wrap;
align-items: center;
justify-content: center;
text-align: center;
webkit-user-select: none;
user-select: none;
&:hover {
@media (hover: hover) {
color: var(--color-base-content);
}
}
--tab-p: 1rem;
--tab-bg: var(--color-base-100);
--tab-border-color: var(--color-base-300);
--tab-radius-ss: 0;
--tab-radius-se: 0;
--tab-radius-es: 0;
--tab-radius-ee: 0;
--tab-order: 0;
--tab-radius-min: calc(0.75rem - var(--border));
border-color: #0000;
order: var(--tab-order);
height: calc(var(--size-field, 0.25rem) * 10);
font-size: 0.875rem;
padding-inline-start: var(--tab-p);
padding-inline-end: var(--tab-p);
&:is(input[type="radio"]) {
min-width: fit-content;
&:after {
content: attr(aria-label);
}
}
&:is(label) {
position: relative;
input {
position: absolute;
inset: calc(0.25rem * 0);
cursor: pointer;
appearance: none;
opacity: 0%;
}
}
&:checked, &:is(label:has(:checked)), &:is(.tab-active, [aria-selected="true"]) {
& + .tab-content {
display: block;
height: 100%;
}
}
&:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
color: color-mix(in srgb, var(--color-base-content) 50%, transparent);
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
}
}
&:not(input):empty {
flex-grow: 1;
cursor: default;
}
&:focus {
--tw-outline-style: none;
outline-style: none;
@media (forced-colors: active) {
outline: 2px solid transparent;
outline-offset: 2px;
}
}
&:focus-visible, &:is(label:has(:checked:focus-visible)) {
outline: 2px solid currentColor;
outline-offset: -5px;
}
&[disabled] {
pointer-events: none;
opacity: 40%;
}
}
.menu {
display: flex;
width: fit-content;
flex-direction: column;
flex-wrap: wrap;
padding: calc(0.25rem * 2);
--menu-active-fg: var(--color-neutral-content);
--menu-active-bg: var(--color-neutral);
font-size: 0.875rem;
:where(li ul) {
position: relative;
margin-inline-start: calc(0.25rem * 4);
padding-inline-start: calc(0.25rem * 2);
white-space: nowrap;
&:before {
position: absolute;
inset-inline-start: calc(0.25rem * 0);
top: calc(0.25rem * 3);
bottom: calc(0.25rem * 3);
background-color: var(--color-base-content);
opacity: 10%;
width: var(--border);
content: "";
}
}
:where(li > .menu-dropdown:not(.menu-dropdown-show)) {
display: none;
}
:where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
display: grid;
grid-auto-flow: column;
align-content: flex-start;
align-items: center;
gap: calc(0.25rem * 2);
border-radius: var(--radius-field);
padding-inline: calc(0.25rem * 3);
padding-block: calc(0.25rem * 1.5);
text-align: start;
transition-property: color, background-color, box-shadow;
transition-duration: 0.2s;
transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
grid-auto-columns: minmax(auto, max-content) auto max-content;
text-wrap: balance;
user-select: none;
}
:where(li > details > summary) {
--tw-outline-style: none;
outline-style: none;
@media (forced-colors: active) {
outline: 2px solid transparent;
outline-offset: 2px;
}
&::-webkit-details-marker {
display: none;
}
}
:where(li > details > summary), :where(li > .menu-dropdown-toggle) {
&:after {
justify-self: flex-end;
display: block;
height: 0.375rem;
width: 0.375rem;
rotate: -135deg;
translate: 0 -1px;
transition-property: rotate, translate;
transition-duration: 0.2s;
content: "";
transform-origin: 50% 50%;
box-shadow: 2px 2px inset;
pointer-events: none;
}
}
:where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
rotate: 45deg;
translate: 0 1px;
}
:where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {
&.menu-focus, &:focus-visible {
cursor: pointer;
background-color: color-mix(in srgb, var(--color-base-content) 10%, transparent);
@supports (color: color-mix(in lab, red, red)) {
background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
}
color: var(--color-base-content);
--tw-outline-style: none;
outline-style: none;
@media (forced-colors: active) {
outline: 2px solid transparent;
outline-offset: 2px;
}
}
}
:where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
cursor: pointer;
background-color: color-mix(in srgb, var(--color-base-content) 10%, transparent);
@supports (color: color-mix(in lab, red, red)) {
background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
}
--tw-outline-style: none;
outline-style: none;
@media (forced-colors: active) {
outline: 2px solid transparent;
outline-offset: 2px;
}
box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
}
:where(li:empty) {
background-color: var(--color-base-content);
opacity: 10%;
margin: 0.5rem 1rem;
height: 1px;
}
:where(li) {
position: relative;
display: flex;
flex-shrink: 0;
flex-direction: column;
flex-wrap: wrap;
align-items: stretch;
.badge {
justify-self: flex-end;
}
& > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {
--tw-outline-style: none;
outline-style: none;
@media (forced-colors: active) {
outline: 2px solid transparent;
outline-offset: 2px;
}
color: var(--menu-active-fg);
background-color: var(--menu-active-bg);
background-size: auto, calc(var(--noise) * 100%);
background-image: none, var(--fx-noise);
&:not(&:active) {
box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
}
}
&.menu-disabled {
pointer-events: none;
color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
}
}
.dropdown:focus-within {
.menu-dropdown-toggle:after {
rotate: 45deg;
translate: 0 1px;
}
}
.dropdown-content {
margin-top: calc(0.25rem * 2);
padding: calc(0.25rem * 2);
&:before {
display: none;
}
}
}
.btn {
:where(&) {
width: unset;
}
display: inline-flex;
flex-shrink: 0;
cursor: pointer;
flex-wrap: nowrap;
align-items: center;
justify-content: center;
gap: calc(0.25rem * 1.5);
text-align: center;
vertical-align: middle;
outline-offset: 2px;
webkit-user-select: none;
user-select: none;
padding-inline: var(--btn-p);
color: var(--btn-fg);
--tw-prose-links: var(--btn-fg);
height: var(--size);
font-size: var(--fontsize, 0.875rem);
font-weight: 600;
outline-color: var(--btn-color, var(--color-base-content));
transition-property: color, background-color, border-color, box-shadow;
transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
transition-duration: 0.2s;
border-start-start-radius: var(--join-ss, var(--radius-field));
border-start-end-radius: var(--join-se, var(--radius-field));
border-end-start-radius: var(--join-es, var(--radius-field));
border-end-end-radius: var(--join-ee, var(--radius-field));
background-color: var(--btn-bg);
background-size: auto, calc(var(--noise) * 100%);
background-image: none, var(--btn-noise);
border-width: var(--border);
border-style: solid;
border-color: var(--btn-border);
text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
--size: calc(var(--size-field, 0.25rem) * 10);
--btn-bg: var(--btn-color, var(--color-base-200));
--btn-fg: var(--color-base-content);
--btn-p: 1rem;
--btn-border: var(--btn-bg);
@supports (color: color-mix(in lab, red, red)) {
--btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
}
--btn-shadow: 0 3px 2px -2px var(--btn-bg),
0 4px 3px -2px var(--btn-bg);
@supports (color: color-mix(in lab, red, red)) {
--btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
}
--btn-noise: var(--fx-noise);
.prose & {
text-decoration-line: none;
}
@media (hover: hover) {
&:hover {
--btn-bg: var(--btn-color, var(--color-base-200));
@supports (color: color-mix(in lab, red, red)) {
--btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
}
}
}
&:focus-visible {
outline-width: 2px;
outline-style: solid;
isolation: isolate;
}
&:active:not(.btn-active) {
translate: 0 0.5px;
--btn-bg: var(--btn-color, var(--color-base-200));
@supports (color: color-mix(in lab, red, red)) {
--btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
}
--btn-border: var(--btn-color, var(--color-base-200));
@supports (color: color-mix(in lab, red, red)) {
--btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
}
--btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
}
&:is(:disabled, [disabled], .btn-disabled) {
&:not(.btn-link, .btn-ghost) {
background-color: color-mix(in srgb, var(--color-base-content) 10%, transparent);
@supports (color: color-mix(in lab, red, red)) {
background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
}
box-shadow: none;
}
pointer-events: none;
--btn-border: #0000;
--btn-noise: none;
--btn-fg: color-mix(in srgb, var(--color-base-content) 20%, #0000);
@supports (color: color-mix(in lab, red, red)) {
--btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}
@media (hover: hover) {
&:hover {
pointer-events: none;
background-color: color-mix(in srgb, var(--color-neutral) 20%, transparent);
@supports (color: color-mix(in lab, red, red)) {
background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
}
--btn-border: #0000;
--btn-fg: color-mix(in srgb, var(--color-base-content) 20%, #0000);
@supports (color: color-mix(in lab, red, red)) {
--btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}
}
}
}
&:is(input[type="checkbox"], input[type="radio"]) {
appearance: none;
&::after {
content: attr(aria-label);
}
}
&:where(input:checked:not(.filter .btn)) {
--btn-color: var(--color-primary);
--btn-fg: var(--color-primary-content);
isolation: isolate;
}
}
.loading {
pointer-events: none;
display: inline-block;
aspect-ratio: 1 / 1;
background-color: currentColor;
vertical-align: middle;
width: calc(var(--size-selector, 0.25rem) * 6);
mask-size: 100%;
mask-repeat: no-repeat;
mask-position: center;
mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
}
.list {
display: flex;
flex-direction: column;
font-size: 0.875rem;
:where(.list-row) {
--list-grid-cols: minmax(0, auto) 1fr;
position: relative;
display: grid;
grid-auto-flow: column;
gap: calc(0.25rem * 4);
border-radius: var(--radius-box);
padding: calc(0.25rem * 4);
word-break: break-word;
grid-template-columns: var(--list-grid-cols);
&:has(.list-col-grow:nth-child(1)) {
--list-grid-cols: 1fr;
}
&:has(.list-col-grow:nth-child(2)) {
--list-grid-cols: minmax(0, auto) 1fr;
}
&:has(.list-col-grow:nth-child(3)) {
--list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
}
&:has(.list-col-grow:nth-child(4)) {
--list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
}
&:has(.list-col-grow:nth-child(5)) {
--list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
}
&:has(.list-col-grow:nth-child(6)) {
--list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
minmax(0, auto) 1fr;
}
:not(.list-col-wrap) {
grid-row-start: 1;
}
}
& > :not(:last-child) {
&.list-row, .list-row {
&:after {
content: "";
border-bottom: var(--border) solid;
inset-inline: var(--radius-box);
position: absolute;
bottom: calc(0.25rem * 0);
border-color: color-mix(in srgb, var(--color-base-content) 5%, transparent);
@supports (color: color-mix(in lab, red, red)) {
border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
}
}
}
}
}
.input {
cursor: text;
border: var(--border) solid #0000;
position: relative;
display: inline-flex;
flex-shrink: 1;
appearance: none;
align-items: center;
gap: calc(0.25rem * 2);
background-color: var(--color-base-100);
padding-inline: calc(0.25rem * 3);
vertical-align: middle;
white-space: nowrap;
width: clamp(3rem, 20rem, 100%);
height: var(--size);
font-size: 0.875rem;
border-start-start-radius: var(--join-ss, var(--radius-field));
border-start-end-radius: var(--join-se, var(--radius-field));
border-end-start-radius: var(--join-es, var(--radius-field));
border-end-end-radius: var(--join-ee, var(--radius-field));
border-color: var(--input-color);
box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
@supports (color: color-mix(in lab, red, red)) {
box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
}
--size: calc(var(--size-field, 0.25rem) * 10);
--input-color: color-mix(in srgb, var(--color-base-content) 20%, #0000);
@supports (color: color-mix(in lab, red, red)) {
--input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
}
&:where(input) {
display: inline-flex;
}
:where(input) {
display: inline-flex;
height: 100%;
width: 100%;
appearance: none;
background-color: transparent;
border: none;
&:focus, &:focus-within {
--tw-outline-style: none;
outline-style: none;
@media (forced-colors: active) {
outline: 2px solid transparent;
outline-offset: 2px;
}
}
}
:where(input[type="date"]) {
display: inline-block;
}
&:focus, &:focus-within {
--input-color: var(--color-base-content);
box-shadow: 0 1px var(--input-color);
@supports (color: color-mix(in lab, red, red)) {
box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
}
outline: 2px solid var(--input-color);
outline-offset: 2px;
isolation: isolate;
z-index: 1;
}
&:has(> input[disabled]), &:is(:disabled, [disabled]) {
cursor: not-allowed;
border-color: var(--color-base-200);
background-color: var(--color-base-200);
color: color-mix(in srgb, var(--color-base-content) 40%, transparent);
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}
&::placeholder {
color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
}
box-shadow: none;
}
&:has(> input[disabled]) > input[disabled] {
cursor: not-allowed;
}
&::-webkit-date-and-time-value {
text-align: inherit;
}
&[type="number"] {
&::-webkit-inner-spin-button {
margin-block: calc(0.25rem * -3);
margin-inline-end: calc(0.25rem * -3);
}
}
&::-webkit-calendar-picker-indicator {
position: absolute;
inset-inline-end: 0.75em;
}
}
.indicator {
position: relative;
display: inline-flex;
width: max-content;
:where(.indicator-item) {
z-index: 1;
position: absolute;
white-space: nowrap;
top: var(--inidicator-t, 0);
bottom: var(--inidicator-b, auto);
left: var(--inidicator-s, auto);
right: var(--inidicator-e, 0);
translate: var(--inidicator-x, 50%) var(--indicator-y, -50%);
}
}
.table {
font-size: 0.875rem;
position: relative;
width: 100%;
border-radius: var(--radius-box);
text-align: left;
&:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
text-align: right;
}
tr.row-hover {
&, &:nth-child(even) {
&:hover {
@media (hover: hover) {
background-color: var(--color-base-200);
}
}
}
}
:where(th, td) {
padding-inline: calc(0.25rem * 4);
padding-block: calc(0.25rem * 3);
vertical-align: middle;
}
:where(thead, tfoot) {
white-space: nowrap;
color: color-mix(in srgb, var(--color-base-content) 60%, transparent);
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
}
font-size: 0.875rem;
font-weight: 600;
}
:where(tfoot) {
border-top: var(--border) solid color-mix(in srgb, var(--color-base-content) 5%, #0000);
@supports (color: color-mix(in lab, red, red)) {
border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}
}
:where(.table-pin-rows thead tr) {
position: sticky;
top: calc(0.25rem * 0);
z-index: 1;
background-color: var(--color-base-100);
}
:where(.table-pin-rows tfoot tr) {
position: sticky;
bottom: calc(0.25rem * 0);
z-index: 1;
background-color: var(--color-base-100);
}
:where(.table-pin-cols tr th) {
position: sticky;
right: calc(0.25rem * 0);
left: calc(0.25rem * 0);
background-color: var(--color-base-100);
}
:where(thead tr, tbody tr:not(:last-child)) {
border-bottom: var(--border) solid color-mix(in srgb, var(--color-base-content) 5%, #0000);
@supports (color: color-mix(in lab, red, red)) {
border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}
}
}
.steps {
display: inline-grid;
grid-auto-flow: column;
overflow: hidden;
overflow-x: auto;
counter-reset: step;
grid-auto-columns: 1fr;
.step {
display: grid;
grid-template-columns: repeat(1, minmax(0, 1fr));
grid-template-columns: auto;
grid-template-rows: repeat(2, minmax(0, 1fr));
grid-template-rows: 40px 1fr;
place-items: center;
text-align: center;
min-width: 4rem;
--step-bg: var(--color-base-300);
--step-fg: var(--color-base-content);
&:before {
top: calc(0.25rem * 0);
grid-column-start: 1;
grid-row-start: 1;
height: calc(0.25rem * 2);
width: 100%;
border: 1px solid;
color: var(--step-bg);
background-color: var(--step-bg);
--tw-content: "";
content: var(--tw-content);
margin-inline-start: -100%;
}
> .step-icon, &:not(:has(.step-icon)):after {
content: counter(step);
counter-increment: step;
z-index: 1;
color: var(--step-fg);
background-color: var(--step-bg);
border: 1px solid var(--step-bg);
position: relative;
grid-column-start: 1;
grid-row-start: 1;
display: grid;
height: calc(0.25rem * 8);
width: calc(0.25rem * 8);
place-items: center;
place-self: center;
border-radius: calc(infinity * 1px);
}
&:first-child:before {
content: none;
}
&[data-content]:after {
content: attr(data-content);
}
}
.step-neutral {
+ .step-neutral:before, &:after, > .step-icon {
--step-bg: var(--color-neutral);
--step-fg: var(--color-neutral-content);
}
}
.step-primary {
+ .step-primary:before, &:after, > .step-icon {
--step-bg: var(--color-primary);
--step-fg: var(--color-primary-content);
}
}
.step-secondary {
+ .step-secondary:before, &:after, > .step-icon {
--step-bg: var(--color-secondary);
--step-fg: var(--color-secondary-content);
}
}
.step-accent {
+ .step-accent:before, &:after, > .step-icon {
--step-bg: var(--color-accent);
--step-fg: var(--color-accent-content);
}
}
.step-info {
+ .step-info:before, &:after, > .step-icon {
--step-bg: var(--color-info);
--step-fg: var(--color-info-content);
}
}
.step-success {
+ .step-success:before, &:after, > .step-icon {
--step-bg: var(--color-success);
--step-fg: var(--color-success-content);
}
}
.step-warning {
+ .step-warning:before, &:after, > .step-icon {
--step-bg: var(--color-warning);
--step-fg: var(--color-warning-content);
}
}
.step-error {
+ .step-error:before, &:after, > .step-icon {
--step-bg: var(--color-error);
--step-fg: var(--color-error-content);
}
}
}
.tabs-border {
.tab {
--tab-border-color: #0000 #0000 var(--tab-border-color) #0000;
position: relative;
border-radius: var(--radius-field);
&:before {
--tw-content: "";
content: var(--tw-content);
background-color: var(--tab-border-color);
transition: background-color 0.2s ease;
width: 80%;
height: 3px;
border-radius: var(--radius-field);
bottom: 0;
left: 10%;
position: absolute;
}
&:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), &:is(input:checked), &:is(label:has(:checked)) {
&:before {
--tab-border-color: currentColor;
border-top: 3px solid;
}
}
}
}
.menu-horizontal {
display: inline-flex;
flex-direction: row;
& > li:not(.menu-title) > details > ul {
position: absolute;
margin-inline-start: calc(0.25rem * 0);
margin-top: calc(0.25rem * 4);
padding-block: calc(0.25rem * 2);
padding-inline-end: calc(0.25rem * 2);
}
& > li > details > ul {
&:before {
content: none;
}
}
:where(& > li:not(.menu-title) > details > ul) {
border-radius: var(--radius-box);
background-color: var(--color-base-100);
box-shadow: 0 1px 3px 0 oklch(0% 0 0/0.1), 0 1px 2px -1px oklch(0% 0 0/0.1);
}
}
.radio {
position: relative;
flex-shrink: 0;
cursor: pointer;
appearance: none;
border-radius: calc(infinity * 1px);
padding: calc(0.25rem * 1);
vertical-align: middle;
border: var(--border) solid var(--input-color, currentColor);
@supports (color: color-mix(in lab, red, red)) {
border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
}
box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
--size: calc(var(--size-selector, 0.25rem) * 6);
width: var(--size);
height: var(--size);
color: var(--input-color, currentColor);
&:before {
display: block;
width: 100%;
height: 100%;
border-radius: calc(infinity * 1px);
--tw-content: "";
content: var(--tw-content);
background-size: auto, calc(var(--noise) * 100%);
background-image: none, var(--fx-noise);
}
&:focus-visible {
outline: 2px solid currentColor;
}
&:checked, &[aria-checked="true"] {
animation: radio 0.2s ease-out;
border-color: currentColor;
background-color: var(--color-base-100);
&:before {
background-color: currentColor;
box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
}
@media (forced-colors: active) {
&:before {
outline-style: var(--tw-outline-style);
outline-width: 1px;
outline-offset: calc(1px * -1);
}
}
@media print {
&:before {
outline: 0.25rem solid;
outline-offset: -1rem;
}
}
}
&:disabled {
cursor: not-allowed;
opacity: 20%;
}
}
.progress {
position: relative;
height: calc(0.25rem * 2);
width: 100%;
appearance: none;
overflow: hidden;
border-radius: var(--radius-box);
background-color: currentColor;
@supports (color: color-mix(in lab, red, red)) {
background-color: color-mix(in oklab, currentColor 20%, transparent);
}
color: var(--color-base-content);
&:indeterminate {
background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
background-size: 200%;
background-position-x: 15%;
animation: progress 5s ease-in-out infinite;
@supports (-moz-appearance: none) {
&::-moz-progress-bar {
background-color: transparent;
background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
background-size: 200%;
background-position-x: 15%;
animation: progress 5s ease-in-out infinite;
}
}
}
@supports (-moz-appearance: none) {
&::-moz-progress-bar {
border-radius: var(--radius-box);
background-color: currentColor;
}
}
@supports (-webkit-appearance: none) {
&::-webkit-progress-bar {
border-radius: var(--radius-box);
background-color: transparent;
}
&::-webkit-progress-value {
border-radius: var(--radius-box);
background-color: currentColor;
}
}
}
.absolute {
position: absolute;
}
.relative {
position: relative;
}
.static {
position: static;
}
.tooltip-bottom {
> .tooltip-content, &[data-tip]:before {
transform: translateX(-50%) translateY(var(--tt-pos, -0.25rem));
inset: var(--tt-off) auto auto 50%;
}
&:after {
transform: translateX(-50%) translateY(var(--tt-pos, -0.25rem)) rotate(180deg);
inset: var(--tt-tail) auto auto 50%;
}
}
.tooltip-left {
> .tooltip-content, &[data-tip]:before {
transform: translateX(calc(var(--tt-pos, 0.25rem) - 0.25rem)) translateY(-50%);
inset: 50% var(--tt-off) auto auto;
}
&:after {
transform: translateX(var(--tt-pos, 0.25rem)) translateY(-50%) rotate(-90deg);
inset: 50% calc(var(--tt-tail) + 1px) auto auto;
}
}
.tooltip-right {
> .tooltip-content, &[data-tip]:before {
transform: translateX(calc(var(--tt-pos, -0.25rem) + 0.25rem)) translateY(-50%);
inset: 50% auto auto var(--tt-off);
}
&:after {
transform: translateX(var(--tt-pos, -0.25rem)) translateY(-50%) rotate(90deg);
inset: 50% auto auto calc(var(--tt-tail) + 1px);
}
}
.inset-0 {
inset: calc(var(--spacing) * 0);
}
.top-0 {
top: calc(var(--spacing) * 0);
}
.right-0 {
right: calc(var(--spacing) * 0);
}
.bottom-0 {
bottom: calc(var(--spacing) * 0);
}
.btn-active {
--btn-bg: var(--btn-color, var(--color-base-200));
@supports (color: color-mix(in lab, red, red)) {
--btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
}
--btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
isolation: isolate;
}
.modal-backdrop {
grid-column-start: 1;
grid-row-start: 1;
display: grid;
align-self: stretch;
justify-self: stretch;
color: transparent;
z-index: -1;
button {
cursor: pointer;
}
}
.tab-content {
order: var(--tabcontent-order);
display: none;
border-color: transparent;
--tabcontent-radius-ss: 0;
--tabcontent-radius-se: 0;
--tabcontent-radius-es: 0;
--tabcontent-radius-ee: 0;
--tabcontent-order: 1;
width: 100%;
margin: var(--tabcontent-margin);
border-width: var(--border);
border-start-start-radius: var(--tabcontent-radius-ss);
border-start-end-radius: var(--tabcontent-radius-se);
border-end-start-radius: var(--tabcontent-radius-es);
border-end-end-radius: var(--tabcontent-radius-ee);
}
.order-1 {
order: 1;
}
.order-2 {
order: 2;
}
.order-last {
order: 9999;
}
.col-span-1 {
grid-column: span 1 / span 1;
}
.col-span-2 {
grid-column: span 2 / span 2;
}
.col-span-5 {
grid-column: span 5 / span 5;
}
.col-span-10 {
grid-column: span 10 / span 10;
}
.modal-box {
grid-column-start: 1;
grid-row-start: 1;
max-height: 100vh;
width: calc(11/12 * 100%);
max-width: 32rem;
background-color: var(--color-base-100);
padding: calc(0.25rem * 6);
transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
border-top-left-radius: var(--modal-tl, var(--radius-box));
border-top-right-radius: var(--modal-tr, var(--radius-box));
border-bottom-left-radius: var(--modal-bl, var(--radius-box));
border-bottom-right-radius: var(--modal-br, var(--radius-box));
scale: 95%;
opacity: 0;
box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
overflow-y: auto;
overscroll-behavior: contain;
}
.container {
width: 100%;
@media (width >= 40rem) {
max-width: 40rem;
}
@media (width >= 48rem) {
max-width: 48rem;
}
@media (width >= 64rem) {
max-width: 64rem;
}
@media (width >= 80rem) {
max-width: 80rem;
}
@media (width >= 96rem) {
max-width: 96rem;
}
}
.m-1 {
margin: calc(var(--spacing) * 1);
}
.m-4 {
margin: calc(var(--spacing) * 4);
}
.m-10 {
margin: calc(var(--spacing) * 10);
}
.m-20 {
margin: calc(var(--spacing) * 20);
}
.m-50 {
margin: calc(var(--spacing) * 50);
}
.m-\[10px\] {
margin: 10px;
}
.m-\[20px\] {
margin: 20px;
}
.label {
display: inline-flex;
align-items: center;
gap: calc(0.25rem * 1.5);
white-space: nowrap;
color: currentColor;
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in oklab, currentColor 60%, transparent);
}
&:has(input) {
cursor: pointer;
}
&:is(.input > *, .select > *) {
display: flex;
height: calc(100% - 0.5rem);
align-items: center;
padding-inline: calc(0.25rem * 3);
white-space: nowrap;
font-size: inherit;
&:first-child {
margin-inline-start: calc(0.25rem * -3);
margin-inline-end: calc(0.25rem * 3);
border-inline-end: var(--border) solid currentColor;
@supports (color: color-mix(in lab, red, red)) {
border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}
}
&:last-child {
margin-inline-start: calc(0.25rem * 3);
margin-inline-end: calc(0.25rem * -3);
border-inline-start: var(--border) solid currentColor;
@supports (color: color-mix(in lab, red, red)) {
border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}
}
}
}
.mt-2 {
margin-top: calc(var(--spacing) * 2);
}
.mt-3 {
margin-top: calc(var(--spacing) * 3);
}
.mr-2 {
margin-right: calc(var(--spacing) * 2);
}
.fieldset-legend {
margin-bottom: calc(0.25rem * -1);
display: flex;
align-items: center;
justify-content: space-between;
gap: calc(0.25rem * 2);
padding-block: calc(0.25rem * 2);
color: var(--color-base-content);
font-weight: 600;
}
.mb-1 {
margin-bottom: calc(var(--spacing) * 1);
}
.mb-2 {
margin-bottom: calc(var(--spacing) * 2);
}
.mb-4 {
margin-bottom: calc(var(--spacing) * 4);
}
.mb-\[2em\] {
margin-bottom: 2em;
}
.ml-2 {
margin-left: calc(var(--spacing) * 2);
}
.ml-\[-35px\] {
margin-left: -35px;
}
.status {
display: inline-block;
aspect-ratio: 1 / 1;
width: calc(0.25rem * 2);
height: calc(0.25rem * 2);
border-radius: var(--radius-selector);
background-color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
@supports (color: color-mix(in lab, red, red)) {
background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
background-position: center;
background-repeat: no-repeat;
vertical-align: middle;
color: color-mix(in srgb, #000 30%, transparent);
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in srgb, #000 30%, transparent);
@supports (color: color-mix(in lab, red, red)) {
color: color-mix(in oklab, var(--color-black) 30%, transparent);
}
}
background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
box-shadow: 0 2px 3px -1px currentColor;
@supports (color: color-mix(in lab, red, red)) {
box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
}
}
.badge {
display: inline-flex;
align-items: center;
justify-content: center;
gap: calc(0.25rem * 2);
border-radius: var(--radius-selector);
vertical-align: middle;
color: var(--badge-fg);
border: var(--border) solid var(--badge-color, var(--color-base-200));
font-size: 0.875rem;
width: fit-content;
padding-inline: calc(0.25rem * 3 - var(--border));
background-size: auto, calc(var(--noise) * 100%);
background-image: none, var(--fx-noise);
background-color: var(--badge-bg);
--badge-bg: var(--badge-color, var(--color-base-100));
--badge-fg: var(--color-base-content);
--size: calc(var(--size-selector, 0.25rem) * 6);
height: var(--size);
&.badge-outline {
--badge-fg: var(--badge-color);
--badge-bg: #0000;
background-image: none;
border-color: currentColor;
}
&.badge-dash {
--badge-fg: var(--badge-color);
--badge-bg: #0000;
background-image: none;
border-color: currentColor;
border-style: dashed;
}
&.badge-soft {
color: var(--badge-color, var(--color-base-content));
background-color: var(--badge-color, var(--color-base-content));
@supports (color: color-mix(in lab, red, red)) {
background-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
}
border-color: var(--badge-color, var(--color-base-content));
@supports (color: color-mix(in lab, red, red)) {
border-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
}
background-image: none;
}
}
.kbd {
display: inline-flex;
align-items: center;
justify-content: center;
border-radius: var(--radius-field);
background-color: var(--color-base-200);
vertical-align: middle;
padding-left: 0.5em;
padding-right: 0.5em;
border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
@supports (color: color-mix(in lab, red, red)) {
border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
}
border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
@supports (color: color-mix(in lab, red, red)) {
border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
}
--size: calc(var(--size-selector, 0.25rem) * 6);
font-size: 0.875rem;
height: var(--size);
min-width: var(--size);
}
.tabs {
display: flex;
flex-wrap: wrap;
--tabs-height: auto;
--tabs-direction: row;
height: var(--tabs-height);
flex-direction: var(--tabs-direction);
}
.footer {
display: grid;
width: 100%;
grid-auto-flow: row;
place-items: start;
column-gap: calc(0.25rem * 4);
row-gap: calc(0.25rem * 10);
font-size: 0.875rem;
line-height: 1.25rem;
& > * {
display: grid;
place-items: start;
gap: calc(0.25rem * 2);
}
&.footer-center {
grid-auto-flow: column dense;
place-items: center;
text-align: center;
& > * {
place-items: center;
}
}
}
.alert {
display: grid;
align-items: center;
gap: calc(0.25rem * 4);
border-radius: var(--radius-box);
padding-inline: calc(0.25rem * 4);
padding-block: calc(0.25rem * 3);
color: var(--color-base-content);
background-color: var(--alert-color, var(--color-base-200));
justify-content: start;
justify-items: start;
grid-auto-flow: column;
grid-template-columns: auto;
text-align: start;
border: var(--border) solid var(--color-base-200);
font-size: 0.875rem;
line-height: 1.25rem;
background-size: auto, calc(var(--noise) * 100%);
background-image: none, var(--fx-noise);
box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px #000, 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
@supports (color: color-mix(in lab, red, red)) {
box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
}
&:has(:nth-child(2)) {
grid-template-columns: auto minmax(auto, 1fr);
}
&.alert-outline {
background-color: transparent;
color: var(--alert-color);
box-shadow: none;
background-image: none;
}
&.alert-dash {
background-color: transparent;
color: var(--alert-color);
border-style: dashed;
box-shadow: none;
background-image: none;
}
&.alert-soft {
color: var(--alert-color, var(--color-base-content));
background: var(--alert-color, var(--color-base-content));
@supports (color: color-mix(in lab, red, red)) {
background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
}
border-color: var(--alert-color, var(--color-base-content));
@supports (color: color-mix(in lab, red, red)) {
border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
}
box-shadow: none;
background-image: none;
}
}
.fieldset {
display: grid;
gap: calc(0.25rem * 1.5);
padding-block: calc(0.25rem * 1);
font-size: 0.75rem;
grid-template-columns: 1fr;
grid-auto-rows: max-content;
}
.mask {
display: inline-block;
vertical-align: middle;
mask-size: contain;
mask-repeat: no-repeat;
mask-position: center;
}
.block {
display: block;
}
.flex {
display: flex;
}
.grid {
display: grid;
}
.hidden {
display: none;
}
.inline-block {
display: inline-block;
}
.inline-grid {
display: inline-grid;
}
.table {
display: table;
}
.aspect-3\/2 {
aspect-ratio: 3/2;
}
.aspect-square {
aspect-ratio: 1 / 1;
}
.size-2 {
width: calc(var(--spacing) * 2);
height: calc(var(--spacing) * 2);
}
.size-3 {
width: calc(var(--spacing) * 3);
height: calc(var(--spacing) * 3);
}
.size-4 {
width: calc(var(--spacing) * 4);
height: calc(var(--spacing) * 4);
}
.size-5 {
width: calc(var(--spacing) * 5);
height: calc(var(--spacing) * 5);
}
.size-6 {
width: calc(var(--spacing) * 6);
height: calc(var(--spacing) * 6);
}
.h-6 {
height: calc(var(--spacing) * 6);
}
.h-\[1\.5rem\] {
height: 1.5rem;
}
.h-\[2rem\] {
height: 2rem;
}
.h-\[50\%\] {
height: 50%;
}
.h-\[64px\] {
height: 64px;
}
.h-\[90\%\] {
height: 90%;
}
.h-\[100px\] {
height: 100px;
}
.h-\[calc\(100vh-64px\)\] {
height: calc(100vh - 64px);
}
.h-fit {
height: fit-content;
}
.h-full {
height: 100%;
}
.h-screen {
height: 100vh;
}
.max-h-\[50vh\] {
max-height: 50vh;
}
.w-6 {
width: calc(var(--spacing) * 6);
}
.w-100 {
width: calc(var(--spacing) * 100);
}
.w-\[50\%\] {
width: 50%;
}
.w-auto {
width: auto;
}
.w-full {
width: 100%;
}
.flex-shrink {
flex-shrink: 1;
}
.shrink-0 {
flex-shrink: 0;
}
.flex-grow {
flex-grow: 1;
}
.transform {
transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.skeleton {
border-radius: var(--radius-box);
background-color: var(--color-base-300);
@media (prefers-reduced-motion: reduce) {
transition-duration: 15s;
}
will-change: background-position;
animation: skeleton 1.8s ease-in-out infinite;
background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );
background-size: 200% auto;
background-repeat: no-repeat;
background-position-x: -50%;
}
.animate-ping {
animation: var(--animate-ping);
}
.animate-pulse {
animation: var(--animate-pulse);
}
.grid-cols-1 {
grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-5 {
grid-template-columns: repeat(5, minmax(0, 1fr));
}
.grid-cols-10 {
grid-template-columns: repeat(10, minmax(0, 1fr));
}
.flex-col {
flex-direction: column;
}
.flex-row {
flex-direction: row;
}
.flex-wrap {
flex-wrap: wrap;
}
.items-center {
align-items: center;
}
.items-end {
align-items: flex-end;
}
.items-start {
align-items: flex-start;
}
.justify-center {
justify-content: center;
}
.gap-1 {
gap: calc(var(--spacing) * 1);
}
.gap-2 {
gap: calc(var(--spacing) * 2);
}
.gap-3 {
gap: calc(var(--spacing) * 3);
}
.gap-4 {
gap: calc(var(--spacing) * 4);
}
.overflow-y-auto {
overflow-y: auto;
}
.overflow-y-hidden {
overflow-y: hidden;
}
.rounded {
border-radius: 0.25rem;
}
.rounded-box {
border-radius: var(--radius-box);
}
.rounded-box {
border-radius: var(--radius-box);
}
.rounded-full {
border-radius: calc(infinity * 1px);
}
.rounded-lg {
border-radius: var(--radius-lg);
}
.rounded-md {
border-radius: var(--radius-md);
}
.rounded-sm {
border-radius: var(--radius-sm);
}
.border-1 {
border-style: var(--tw-border-style);
border-width: 1px;
}
.border-t-1 {
border-top-style: var(--tw-border-style);
border-top-width: 1px;
}
.border-b-1 {
border-bottom-style: var(--tw-border-style);
border-bottom-width: 1px;
}
.badge-ghost {
border-color: var(--color-base-200);
background-color: var(--color-base-200);
color: var(--color-base-content);
background-image: none;
}
.alert-success {
border-color: var(--color-success);
color: var(--color-success-content);
--alert-color: var(--color-success);
}
.border-black {
border-color: var(--color-black);
}
.border-blue-200 {
border-color: var(--color-blue-200);
}
.border-gray-200 {
border-color: var(--color-gray-200);
}
.border-green-light {
border-color: var(--color-green-light);
}
.border-red {
border-color: var(--color-red);
}
.border-red-light {
border-color: var(--color-red-light);
}
.border-yellow {
border-color: var(--color-yellow);
}
.border-yellow-light {
border-color: var(--color-yellow-light);
}
.status-error {
background-color: var(--color-error);
color: var(--color-error);
}
.status-success {
background-color: var(--color-success);
color: var(--color-success);
}
.bg-\[\#F2F4F8\] {
background-color: #F2F4F8;
}
.bg-base-200 {
background-color: var(--color-base-200);
}
.bg-black {
background-color: var(--color-black);
}
.bg-blue-100 {
background-color: var(--color-blue-100);
}
.bg-blue-200 {
background-color: var(--color-blue-200);
}
.bg-gray {
background-color: var(--color-gray);
}
.bg-gray-50 {
background-color: var(--color-gray-50);
}
.bg-gray-100 {
background-color: var(--color-gray-100);
}
.bg-gray-light {
background-color: var(--color-gray-light);
}
.bg-green {
background-color: var(--color-green);
}
.bg-green-100 {
background-color: var(--color-green-100);
}
.bg-green-light {
background-color: var(--color-green-light);
}
.bg-primary {
background-color: var(--color-primary);
}
.bg-red {
background-color: var(--color-red);
}
.bg-red-100 {
background-color: var(--color-red-100);
}
.bg-red-light {
background-color: var(--color-red-light);
}
.bg-red-light-50 {
background-color: var(--color-red-light-50);
}
.bg-white {
background-color: var(--color-white);
}
.bg-white-light {
background-color: var(--color-white-light);
}
.bg-yellow {
background-color: var(--color-yellow);
}
.bg-yellow-light {
background-color: var(--color-yellow-light);
}
.bg-none {
background-image: none;
}
.mask-repeat {
mask-repeat: repeat;
}
.stroke-current {
stroke: currentcolor;
}
.object-contain {
object-fit: contain;
}
.p-1 {
padding: calc(var(--spacing) * 1);
}
.p-2 {
padding: calc(var(--spacing) * 2);
}
.p-3 {
padding: calc(var(--spacing) * 3);
}
.p-4 {
padding: calc(var(--spacing) * 4);
}
.p-6 {
padding: calc(var(--spacing) * 6);
}
.pt-2 {
padding-top: calc(var(--spacing) * 2);
}
.pt-4 {
padding-top: calc(var(--spacing) * 4);
}
.pr-0 {
padding-right: calc(var(--spacing) * 0);
}
.pr-2 {
padding-right: calc(var(--spacing) * 2);
}
.pr-6 {
padding-right: calc(var(--spacing) * 6);
}
.pr-\[50px\] {
padding-right: 50px;
}
.pb-4 {
padding-bottom: calc(var(--spacing) * 4);
}
.pl-2 {
padding-left: calc(var(--spacing) * 2);
}
.pl-6 {
padding-left: calc(var(--spacing) * 6);
}
.text-center {
text-align: center;
}
.text-right {
text-align: right;
}
.align-middle {
vertical-align: middle;
}
.font-mono {
font-family: var(--font-mono);
}
.text-2xl {
font-size: var(--text-2xl);
line-height: var(--tw-leading, var(--text-2xl--line-height));
}
.text-\[6pt\]\/2 {
font-size: 6pt;
line-height: calc(var(--spacing) * 2);
}
.text-base {
font-size: var(--text-base);
line-height: var(--tw-leading, var(--text-base--line-height));
}
.text-base\/4 {
font-size: var(--text-base);
line-height: calc(var(--spacing) * 4);
}
.text-lg {
font-size: var(--text-lg);
line-height: var(--tw-leading, var(--text-lg--line-height));
}
.text-sm {
font-size: var(--text-sm);
line-height: var(--tw-leading, var(--text-sm--line-height));
}
.text-xl {
font-size: var(--text-xl);
line-height: var(--tw-leading, var(--text-xl--line-height));
}
.text-xs {
font-size: var(--text-xs);
line-height: var(--tw-leading, var(--text-xs--line-height));
}
.text-xs\/3 {
font-size: var(--text-xs);
line-height: calc(var(--spacing) * 3);
}
.font-bold {
--tw-font-weight: var(--font-weight-bold);
font-weight: var(--font-weight-bold);
}
.font-medium {
--tw-font-weight: var(--font-weight-medium);
font-weight: var(--font-weight-medium);
}
.text-wrap {
text-wrap: wrap;
}
.break-words {
overflow-wrap: break-word;
}
.progress-error {
color: var(--color-error);
}
.text-black {
color: var(--color-black);
}
.text-blue-500 {
color: var(--color-blue-500);
}
.text-gray {
color: var(--color-gray);
}
.text-gray-200 {
color: var(--color-gray-200);
}
.text-gray-300 {
color: var(--color-gray-300);
}
.text-gray-500 {
color: var(--color-gray-500);
}
.text-green {
color: var(--color-green);
}
.text-primary {
color: var(--color-primary);
}
.text-red {
color: var(--color-red);
}
.text-white {
color: var(--color-white);
}
.text-white-light {
color: var(--color-white-light);
}
.opacity-0 {
opacity: 0%;
}
.shadow-lg {
--tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-md {
--tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-none {
--tw-shadow: 0 0 #0000;
box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.transition {
transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.duration-100 {
--tw-duration: 100ms;
transition-duration: 100ms;
}
.btn-outline {
&:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
--btn-shadow: "";
--btn-bg: #0000;
--btn-fg: var(--btn-color);
--btn-border: var(--btn-color);
--btn-noise: none;
}
}
.btn-sm {
--fontsize: 0.75rem;
--btn-p: 0.75rem;
--size: calc(var(--size-field, 0.25rem) * 8);
}
.badge-primary {
--badge-color: var(--color-primary);
--badge-fg: var(--color-primary-content);
}
.btn-error {
--btn-color: var(--color-error);
--btn-fg: var(--color-error-content);
}
.\*\:\[grid-area\:1\/1\] {
:is(& > *) {
grid-area: 1/1;
}
}
.hover\:scale-110 {
&:hover {
--tw-scale-x: 110%;
--tw-scale-y: 110%;
--tw-scale-z: 110%;
scale: var(--tw-scale-x) var(--tw-scale-y);
}
}
.hover\:opacity-50 {
&:hover {
opacity: 50%;
}
}
.hover\:opacity-\[0\.5\] {
&:hover {
opacity: 0.5;
}
}
.hover\:shadow-md {
&:hover {
--tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
}
.disabled\:text-black {
&:disabled {
color: var(--color-black);
}
}
.md\:col-span-2 {
@media (width >= 48rem) {
grid-column: span 2 / span 2;
}
}
.md\:col-span-3 {
@media (width >= 48rem) {
grid-column: span 3 / span 3;
}
}
.md\:m-\[20px\] {
@media (width >= 48rem) {
margin: 20px;
}
}
.md\:block {
@media (width >= 48rem) {
display: block;
}
}
.md\:hidden {
@media (width >= 48rem) {
display: none;
}
}
.md\:inline {
@media (width >= 48rem) {
display: inline;
}
}
.md\:size-3 {
@media (width >= 48rem) {
width: calc(var(--spacing) * 3);
height: calc(var(--spacing) * 3);
}
}
.md\:size-5 {
@media (width >= 48rem) {
width: calc(var(--spacing) * 5);
height: calc(var(--spacing) * 5);
}
}
.md\:grid-cols-2 {
@media (width >= 48rem) {
grid-template-columns: repeat(2, minmax(0, 1fr));
}
}
.md\:flex-col {
@media (width >= 48rem) {
flex-direction: column;
}
}
.md\:items-center {
@media (width >= 48rem) {
align-items: center;
}
}
.md\:items-start {
@media (width >= 48rem) {
align-items: flex-start;
}
}
.md\:gap-3 {
@media (width >= 48rem) {
gap: calc(var(--spacing) * 3);
}
}
.md\:rounded-md {
@media (width >= 48rem) {
border-radius: var(--radius-md);
}
}
.md\:p-2 {
@media (width >= 48rem) {
padding: calc(var(--spacing) * 2);
}
}
.md\:p-3 {
@media (width >= 48rem) {
padding: calc(var(--spacing) * 3);
}
}
.md\:p-4 {
@media (width >= 48rem) {
padding: calc(var(--spacing) * 4);
}
}
.md\:pr-4 {
@media (width >= 48rem) {
padding-right: calc(var(--spacing) * 4);
}
}
.md\:pl-4 {
@media (width >= 48rem) {
padding-left: calc(var(--spacing) * 4);
}
}
.md\:text-right {
@media (width >= 48rem) {
text-align: right;
}
}
.md\:text-3xl {
@media (width >= 48rem) {
font-size: var(--text-3xl);
line-height: var(--tw-leading, var(--text-3xl--line-height));
}
}
.md\:text-lg {
@media (width >= 48rem) {
font-size: var(--text-lg);
line-height: var(--tw-leading, var(--text-lg--line-height));
}
}
.md\:text-sm {
@media (width >= 48rem) {
font-size: var(--text-sm);
line-height: var(--tw-leading, var(--text-sm--line-height));
}
}
.md\:text-sm\/4 {
@media (width >= 48rem) {
font-size: var(--text-sm);
line-height: calc(var(--spacing) * 4);
}
}
.lg\:order-1 {
@media (width >= 64rem) {
order: 1;
}
}
.lg\:col-span-3 {
@media (width >= 64rem) {
grid-column: span 3 / span 3;
}
}
.lg\:col-span-7 {
@media (width >= 64rem) {
grid-column: span 7 / span 7;
}
}
.lg\:m-\[20px\] {
@media (width >= 64rem) {
margin: 20px;
}
}
.lg\:mb-2 {
@media (width >= 64rem) {
margin-bottom: calc(var(--spacing) * 2);
}
}
.lg\:mb-4 {
@media (width >= 64rem) {
margin-bottom: calc(var(--spacing) * 4);
}
}
.lg\:mb-\[0\] {
@media (width >= 64rem) {
margin-bottom: 0;
}
}
.lg\:block {
@media (width >= 64rem) {
display: block;
}
}
.lg\:hidden {
@media (width >= 64rem) {
display: none;
}
}
.lg\:inline-block {
@media (width >= 64rem) {
display: inline-block;
}
}
.lg\:aspect-auto {
@media (width >= 64rem) {
aspect-ratio: auto;
}
}
.lg\:size-7 {
@media (width >= 64rem) {
width: calc(var(--spacing) * 7);
height: calc(var(--spacing) * 7);
}
}
.lg\:h-\[2rem\] {
@media (width >= 64rem) {
height: 2rem;
}
}
.lg\:h-\[90vh\] {
@media (width >= 64rem) {
height: 90vh;
}
}
.lg\:h-full {
@media (width >= 64rem) {
height: 100%;
}
}
.lg\:w-auto {
@media (width >= 64rem) {
width: auto;
}
}
.lg\:flex-grow {
@media (width >= 64rem) {
flex-grow: 1;
}
}
.lg\:grid-cols-2 {
@media (width >= 64rem) {
grid-template-columns: repeat(2, minmax(0, 1fr));
}
}
.lg\:grid-cols-3 {
@media (width >= 64rem) {
grid-template-columns: repeat(3, minmax(0, 1fr));
}
}
.lg\:flex-col {
@media (width >= 64rem) {
flex-direction: column;
}
}
.lg\:flex-row {
@media (width >= 64rem) {
flex-direction: row;
}
}
.lg\:items-end {
@media (width >= 64rem) {
align-items: flex-end;
}
}
.lg\:items-start {
@media (width >= 64rem) {
align-items: flex-start;
}
}
.lg\:justify-start {
@media (width >= 64rem) {
justify-content: flex-start;
}
}
.lg\:rounded-lg {
@media (width >= 64rem) {
border-radius: var(--radius-lg);
}
}
.lg\:bg-\[\#F2F4F8\] {
@media (width >= 64rem) {
background-color: #F2F4F8;
}
}
.lg\:p-4 {
@media (width >= 64rem) {
padding: calc(var(--spacing) * 4);
}
}
.lg\:p-6 {
@media (width >= 64rem) {
padding: calc(var(--spacing) * 6);
}
}
.lg\:p-\[3em\] {
@media (width >= 64rem) {
padding: 3em;
}
}
.lg\:pr-\[5\%\] {
@media (width >= 64rem) {
padding-right: 5%;
}
}
.lg\:pr-\[35\%\] {
@media (width >= 64rem) {
padding-right: 35%;
}
}
.lg\:pl-\[5\%\] {
@media (width >= 64rem) {
padding-left: 5%;
}
}
.lg\:pl-\[35\%\] {
@media (width >= 64rem) {
padding-left: 35%;
}
}
.lg\:text-2xl {
@media (width >= 64rem) {
font-size: var(--text-2xl);
line-height: var(--tw-leading, var(--text-2xl--line-height));
}
}
.lg\:text-3xl {
@media (width >= 64rem) {
font-size: var(--text-3xl);
line-height: var(--tw-leading, var(--text-3xl--line-height));
}
}
.lg\:text-base {
@media (width >= 64rem) {
font-size: var(--text-base);
line-height: var(--tw-leading, var(--text-base--line-height));
}
}
.lg\:text-lg\/5 {
@media (width >= 64rem) {
font-size: var(--text-lg);
line-height: calc(var(--spacing) * 5);
}
}
.lg\:text-sm {
@media (width >= 64rem) {
font-size: var(--text-sm);
line-height: var(--tw-leading, var(--text-sm--line-height));
}
}
.lg\:text-xl {
@media (width >= 64rem) {
font-size: var(--text-xl);
line-height: var(--tw-leading, var(--text-xl--line-height));
}
}
.lg\:btn-md {
@media (width >= 64rem) {
--fontsize: 0.875rem;
--btn-p: 1rem;
--size: calc(var(--size-field, 0.25rem) * 10);
}
}
}
@layer base {
:where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
color-scheme: light;
--color-base-100: oklch(100% 0 0);
--color-base-200: oklch(98% 0 0);
--color-base-300: oklch(95% 0 0);
--color-base-content: oklch(21% 0.006 285.885);
--color-primary: oklch(45% 0.24 277.023);
--color-primary-content: oklch(93% 0.034 272.788);
--color-secondary: oklch(65% 0.241 354.308);
--color-secondary-content: oklch(94% 0.028 342.258);
--color-accent: oklch(77% 0.152 181.912);
--color-accent-content: oklch(38% 0.063 188.416);
--color-neutral: oklch(14% 0.005 285.823);
--color-neutral-content: oklch(92% 0.004 286.32);
--color-info: oklch(74% 0.16 232.661);
--color-info-content: oklch(29% 0.066 243.157);
--color-success: oklch(76% 0.177 163.223);
--color-success-content: oklch(37% 0.077 168.94);
--color-warning: oklch(82% 0.189 84.429);
--color-warning-content: oklch(41% 0.112 45.904);
--color-error: oklch(71% 0.194 13.428);
--color-error-content: oklch(27% 0.105 12.094);
--radius-selector: 0.5rem;
--radius-field: 0.25rem;
--radius-box: 0.5rem;
--size-selector: 0.25rem;
--size-field: 0.25rem;
--border: 1px;
--depth: 1;
--noise: 0;
}
}
@layer base {
@media (prefers-color-scheme: dark) {
:root {
color-scheme: dark;
--color-base-100: oklch(25.33% 0.016 252.42);
--color-base-200: oklch(23.26% 0.014 253.1);
--color-base-300: oklch(21.15% 0.012 254.09);
--color-base-content: oklch(97.807% 0.029 256.847);
--color-primary: oklch(58% 0.233 277.117);
--color-primary-content: oklch(96% 0.018 272.314);
--color-secondary: oklch(65% 0.241 354.308);
--color-secondary-content: oklch(94% 0.028 342.258);
--color-accent: oklch(77% 0.152 181.912);
--color-accent-content: oklch(38% 0.063 188.416);
--color-neutral: oklch(14% 0.005 285.823);
--color-neutral-content: oklch(92% 0.004 286.32);
--color-info: oklch(74% 0.16 232.661);
--color-info-content: oklch(29% 0.066 243.157);
--color-success: oklch(76% 0.177 163.223);
--color-success-content: oklch(37% 0.077 168.94);
--color-warning: oklch(82% 0.189 84.429);
--color-warning-content: oklch(41% 0.112 45.904);
--color-error: oklch(71% 0.194 13.428);
--color-error-content: oklch(27% 0.105 12.094);
--radius-selector: 0.5rem;
--radius-field: 0.25rem;
--radius-box: 0.5rem;
--size-selector: 0.25rem;
--size-field: 0.25rem;
--border: 1px;
--depth: 1;
--noise: 0;
}
}
}
@layer base {
:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
color-scheme: light;
--color-base-100: oklch(100% 0 0);
--color-base-200: oklch(98% 0 0);
--color-base-300: oklch(95% 0 0);
--color-base-content: oklch(21% 0.006 285.885);
--color-primary: oklch(45% 0.24 277.023);
--color-primary-content: oklch(93% 0.034 272.788);
--color-secondary: oklch(65% 0.241 354.308);
--color-secondary-content: oklch(94% 0.028 342.258);
--color-accent: oklch(77% 0.152 181.912);
--color-accent-content: oklch(38% 0.063 188.416);
--color-neutral: oklch(14% 0.005 285.823);
--color-neutral-content: oklch(92% 0.004 286.32);
--color-info: oklch(74% 0.16 232.661);
--color-info-content: oklch(29% 0.066 243.157);
--color-success: oklch(76% 0.177 163.223);
--color-success-content: oklch(37% 0.077 168.94);
--color-warning: oklch(82% 0.189 84.429);
--color-warning-content: oklch(41% 0.112 45.904);
--color-error: oklch(71% 0.194 13.428);
--color-error-content: oklch(27% 0.105 12.094);
--radius-selector: 0.5rem;
--radius-field: 0.25rem;
--radius-box: 0.5rem;
--size-selector: 0.25rem;
--size-field: 0.25rem;
--border: 1px;
--depth: 1;
--noise: 0;
}
}
@layer base {
:root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
color-scheme: dark;
--color-base-100: oklch(25.33% 0.016 252.42);
--color-base-200: oklch(23.26% 0.014 253.1);
--color-base-300: oklch(21.15% 0.012 254.09);
--color-base-content: oklch(97.807% 0.029 256.847);
--color-primary: oklch(58% 0.233 277.117);
--color-primary-content: oklch(96% 0.018 272.314);
--color-secondary: oklch(65% 0.241 354.308);
--color-secondary-content: oklch(94% 0.028 342.258);
--color-accent: oklch(77% 0.152 181.912);
--color-accent-content: oklch(38% 0.063 188.416);
--color-neutral: oklch(14% 0.005 285.823);
--color-neutral-content: oklch(92% 0.004 286.32);
--color-info: oklch(74% 0.16 232.661);
--color-info-content: oklch(29% 0.066 243.157);
--color-success: oklch(76% 0.177 163.223);
--color-success-content: oklch(37% 0.077 168.94);
--color-warning: oklch(82% 0.189 84.429);
--color-warning-content: oklch(41% 0.112 45.904);
--color-error: oklch(71% 0.194 13.428);
--color-error-content: oklch(27% 0.105 12.094);
--radius-selector: 0.5rem;
--radius-field: 0.25rem;
--radius-box: 0.5rem;
--size-selector: 0.25rem;
--size-field: 0.25rem;
--border: 1px;
--depth: 1;
--noise: 0;
}
}
@layer base {
@property --radialprogress {
syntax: "<percentage>";
inherits: true;
initial-value: 0%;
}
}
@layer base {
:root {
scrollbar-color: currentColor #0000;
@supports (color: color-mix(in lab, red, red)) {
scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
}
}
}
@layer base {
:root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
overflow: hidden;
}
}
@layer base {
:root, [data-theme] {
background-color: var(--root-bg, var(--color-base-100));
color: var(--color-base-content);
}
}
@layer base {
:root {
--fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
}
.chat {
--mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
}
}
@layer base {
:where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
scrollbar-gutter: stable;
background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
--root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
@supports (color: color-mix(in lab, red, red)) {
--root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
}
}
:where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(.modal-start, .modal-end) {
scrollbar-gutter: stable;
}
}
@keyframes skeleton {
0% {
background-position: 150%;
}
100% {
background-position: -50%;
}
}
@keyframes progress {
50% {
background-position-x: -115%;
}
}
@keyframes radio {
0% {
padding: 5px;
}
50% {
padding: 3px;
}
}
@keyframes dropdown {
0% {
opacity: 0;
}
}
@keyframes rating {
0%, 40% {
scale: 1.1;
filter: brightness(1.05) contrast(1.05);
}
}
@keyframes toast {
0% {
scale: 0.9;
opacity: 0;
}
100% {
scale: 1;
opacity: 1;
}
}
@property --tw-rotate-x {
syntax: "*";
inherits: false;
initial-value: rotateX(0);
}
@property --tw-rotate-y {
syntax: "*";
inherits: false;
initial-value: rotateY(0);
}
@property --tw-rotate-z {
syntax: "*";
inherits: false;
initial-value: rotateZ(0);
}
@property --tw-skew-x {
syntax: "*";
inherits: false;
initial-value: skewX(0);
}
@property --tw-skew-y {
syntax: "*";
inherits: false;
initial-value: skewY(0);
}
@property --tw-border-style {
syntax: "*";
inherits: false;
initial-value: solid;
}
@property --tw-font-weight {
syntax: "*";
inherits: false;
}
@property --tw-shadow {
syntax: "*";
inherits: false;
initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
syntax: "*";
inherits: false;
}
@property --tw-shadow-alpha {
syntax: "<percentage>";
inherits: false;
initial-value: 100%;
}
@property --tw-inset-shadow {
syntax: "*";
inherits: false;
initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
syntax: "*";
inherits: false;
}
@property --tw-inset-shadow-alpha {
syntax: "<percentage>";
inherits: false;
initial-value: 100%;
}
@property --tw-ring-color {
syntax: "*";
inherits: false;
}
@property --tw-ring-shadow {
syntax: "*";
inherits: false;
initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
syntax: "*";
inherits: false;
}
@property --tw-inset-ring-shadow {
syntax: "*";
inherits: false;
initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
syntax: "*";
inherits: false;
}
@property --tw-ring-offset-width {
syntax: "<length>";
inherits: false;
initial-value: 0px;
}
@property --tw-ring-offset-color {
syntax: "*";
inherits: false;
initial-value: #fff;
}
@property --tw-ring-offset-shadow {
syntax: "*";
inherits: false;
initial-value: 0 0 #0000;
}
@property --tw-duration {
syntax: "*";
inherits: false;
}
@property --tw-scale-x {
syntax: "*";
inherits: false;
initial-value: 1;
}
@property --tw-scale-y {
syntax: "*";
inherits: false;
initial-value: 1;
}
@property --tw-scale-z {
syntax: "*";
inherits: false;
initial-value: 1;
}
@keyframes ping {
75%, 100% {
transform: scale(2);
opacity: 0;
}
}
@keyframes pulse {
50% {
opacity: 0.5;
}
}
@layer properties {
@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
*, ::before, ::after, ::backdrop {
--tw-rotate-x: rotateX(0);
--tw-rotate-y: rotateY(0);
--tw-rotate-z: rotateZ(0);
--tw-skew-x: skewX(0);
--tw-skew-y: skewY(0);
--tw-border-style: solid;
--tw-font-weight: initial;
--tw-shadow: 0 0 #0000;
--tw-shadow-color: initial;
--tw-shadow-alpha: 100%;
--tw-inset-shadow: 0 0 #0000;
--tw-inset-shadow-color: initial;
--tw-inset-shadow-alpha: 100%;
--tw-ring-color: initial;
--tw-ring-shadow: 0 0 #0000;
--tw-inset-ring-color: initial;
--tw-inset-ring-shadow: 0 0 #0000;
--tw-ring-inset: initial;
--tw-ring-offset-width: 0px;
--tw-ring-offset-color: #fff;
--tw-ring-offset-shadow: 0 0 #0000;
--tw-duration: initial;
--tw-scale-x: 1;
--tw-scale-y: 1;
--tw-scale-z: 1;
}
}
}
